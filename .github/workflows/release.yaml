---
# Release Workflow For Rust
name: Release
on:
  push:
    tags:
      - 'v*'
    # for testing on a branch
    branches:
      - release-workflow

env:
  # replace with your project name
  PROJ_NAME: rs-workflow
  CACHE_REGISTRY: ghcr.io
  CACHE_IMAGE: ${{ github.repository }}/release-cache
  CARGO_TERM_COLOR: always

defaults:
  run:
    shell: bash

jobs:
  binaries:
    name: Binaries
    strategy:
      fail-fast: false
      matrix:
        include:
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-latest, cross: true }
          - { target: x86_64-unknown-linux-musl, os: ubuntu-latest, cross: true }
          #- { target: i686-unknown-linux-musl, os: ubuntu-latest, cross: true }
          #- { target: aarch64-unknown-linux-musl, os: ubuntu-latest, cross: true }
          #- { target: arm-unknown-linux-musleabihf, os: ubuntu-latest, cross: true }
          #- { target: x86_64-apple-darwin, os: macOS-latest, cross: false }
          #- { target: aarch64-apple-darwin, os: macOS-latest, cross: false }
          #- { target: x86_64-pc-windows-msvc, os: windows-latest, cross: false }
          #- { target: i686-pc-windows-msvc, os: windows-latest, cross: false }
          #- { target: aarch64-pc-windows-msvc, os: windows-latest, cross: false }
          #- { target: x86_64-unknown-freebsd, os: ubuntu-latest, cross: true }
    continue-on-error: true
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579

      - uses: actions-rs/toolchain@568dc894a7f9e32ffd9bb7d7a6cebb784cdaa2b0
        with:
          toolchain: stable
          override: true
          profile: minimal
          target: ${{ matrix.target }}

      - name: Log in to the Container registry
        if: runner.os == 'Linux'
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.CACHE_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Restore cache
        if: runner.os == 'Linux'
        uses: hendrikmaus/custom-cache-action/restore@master
        with:
          registry: ${{ env.CACHE_REGISTRY }}
          image: ${{ env.CACHE_IMAGE }}
          tag: ${{ matrix.target }}

      - name: Compile
        uses: actions-rs/cargo@4ff6ec2846f6e7217c1a9b0b503506665f134c4b
        with:
          command: build
          args: --release --target ${{ matrix.target }}
          use-cross: ${{ matrix.cross }}

      # todo no `tar` found on macOS runners
      - name: Compress Unix
        if: runner.os != 'Windows'
        run: |
          cd target/${{ matrix.target }}/release
          ls -la
          tar czvf "${GITHUB_WORKSPACE}/${PROJ_NAME}-${{ matrix.target }}.tar.gz" "${PROJ_NAME}"
          cd -

      - name: Compress Windows
        if: runner.os == 'Windows'
        run: |
          cd target/${{ matrix.target }}/release
          7z a "${GITHUB_WORKSPACE}/${PROJ_NAME}-${{ matrix.target }}.zip" "${PROJ_NAME}.exe"
          cd -

      - name: Upload Unix
        if: runner.os != 'Windows'
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2
        with:
          name: ${{ env.PROJ_NAME }}-${{ matrix.target }}.tar.gz
          path: ${{ env.PROJ_NAME }}-${{ matrix.target }}.tar.gz

      - name: Upload Windows
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2
        with:
          name: ${{ env.PROJ_NAME }}-${{ matrix.target }}.zip
          path: ${{ env.PROJ_NAME }}-${{ matrix.target }}.zip

      - name: Save cache
        if: runner.os == 'Linux'
        uses: hendrikmaus/custom-cache-action/save@master
        with:
          paths: "${{ github.workspace }}/target /home/runner/.cargo/registry/index /home/runner/.cargo/registry/cache"
          registry: ${{ env.CACHE_REGISTRY }}
          image: ${{ env.CACHE_IMAGE }}
          tag: ${{ matrix.target }}

  release:
    name: GitHub Release
    needs: binaries
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579
        with:
          fetch-depth: 0

      - name: Binaries
        uses: actions/download-artifact@f023be2c48cc18debc3bacd34cb396e0295e2869

      - name: Checksums
        run: |
          for file in "${PROJ_NAME}"-*/"${PROJ_NAME}"-*; do
            openssl dgst -sha256 -r "${file}" \
              | awk '{print $1}' > "${file}.sha256"
          done

      - name: Publish
        uses: softprops/action-gh-release@4716bde57e0fcda6ce83002e2469b8a90e560573
        with:
          files: ${{ env.PROJ_NAME }}-*/${{ env.PROJ_NAME }}-*
          generate_release_notes: true
